#!/usr/env python

# Author :Vihanga Bare #

import socket 
from threading import Thread 
from SocketServer import ThreadingMixIn 
 
# New thread created for evry connection #
class RequestThread(Thread): 
 
    def __init__(self,ip,port): 
        Thread.__init__(self) 
        self.ip = ip 
        self.port = port 
        print "[+] New server socket thread started for " + ip + ":" + str(port) 
 
    def run(self): 
        while True : 
            data = conn.recv(1024) 
            print "Server received data:", data
            MESSAGE = raw_input("Multithreaded Python server : Enter Response from Server/Enter exit:")
            if MESSAGE == 'exit':
                break
            conn.send(MESSAGE)  # echo 
 
# Open the socket and initialise the server #
TCP_IP = '127.0.0.1' 
TCP_PORT = 8888 
BUFFER_SIZE = 1024 #maximum size of the buffer
 
    def Server(self):
	tcpServer = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
	tcpServer.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) 
	tcpServer.bind((TCP_IP, TCP_PORT)) 
	threads = [] 
 
	while True: 
                tcpServer.listen(10) 
    		print "Multithreaded Python server : Waiting for connections from TCP clients..." 
    		(conn, (ip,port)) = tcpServer.accept() 
    		newthread = ClientThread(ip,port) 
    		newthread.start() 
    		threads.append(newthread) 
 
		for t in threads: 
			t.join() 

